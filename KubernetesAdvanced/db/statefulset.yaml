apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: db
      app.kubernetes.io/name: db
  serviceName: db
  replicas: 7
  template:
    metadata:
      labels:
        app: db
        app.kubernetes.io/name: db
    spec:
      initContainers:
        - name: init-mysql
          image: mysql:8.0
          command:
          - bash
          - "-c"
          - |
            set -ex
            [[ $HOSTNAME =~ -([0-9]+)$ ]] || exit 1
            ordinal=${BASH_REMATCH[1]}
            echo [mysqld] > /mnt/conf.d/server-id.cnf
            echo server-id=$((100 + $ordinal )) >> /mnt/conf.d/server-id.cnf
            if [[ $ordinal -eq 0 ]]; then
              cp /mnt/config-map/primary.cnf /mnt/conf.d/
            else
              cp /mnt/config-map/replica.cnf /mnt/conf.d/
            fi
          volumeMounts:
            - name: conf
              mountPath: /mnt/conf.d
            - name: config-map
              mountPath: /mnt/config-map
      containers:
        - name: mysql
          image: mysql:8.0
          env:
            - name: MYSQL_RANDOM_ROOT_PASSWORD
              value: "1"
            - name: MYSQL_DATABASE
              value: "snm"
            - name: MYSQL_USER
              value: "snm"
            - name: MYSQL_PASSWORD
              value: "snm1234"
          ports:
            - name: mysql
              containerPort: 3306
          volumeMounts:
            - name: data
              mountPath: /var/lib/mysql
              subPath: mysql
            - name: conf
              mountPath: /etc/mysql/conf.d

      volumes:
        - name: conf
          emptyDir: {}
        - name: config-map
          configMap:
            name: db-cm
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 2Gi
